{"ast":null,"code":"var _jsxFileName = \"/home/saitejasangisapu/Desktop/new project/rbac/src/components/Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { supabase } from \"../supabaseClient\";\n\n// function Registration() {\n//   const [formData, setFormData] = useState({\n//     fullName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     role: \"User\",\n//   });\n\n//   const [message, setMessage] = useState(\"\"); // To store success or error message\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevData) => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(formData);\n\n//     try {\n//       // Insert form data into the 'users' table in Supabase\n//       const { data, error } = await supabase\n//         .from(\"users\") // Replace with your table name\n//         .insert([\n//           {\n//             full_name: formData.fullName,\n//             email: formData.email,\n//             password: formData.password,\n//             role: formData.role,\n//           },\n//         ]);\n\n//       if (error) {\n//         throw error;\n//       }\n\n//       console.log(\"Registration successful:\", data);\n//       setMessage(\"Registration Successful! Please login.\");\n//       setFormData({ fullName: \"\", email: \"\", password: \"\", role: \"User\" }); // Clear the form\n//     } catch (error) {\n//       console.error(\"Error registering user:\", error);\n//       setMessage(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-black text-white flex justify-center items-center\">\n//       <div className=\"w-full max-w-md\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center\">Register</h1>\n\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"bg-purple-900 p-6 rounded-lg shadow-lg\"\n//         >\n//           <div className=\"mb-4\">\n//             <label\n//               htmlFor=\"fullName\"\n//               className=\"block text-lg font-medium mb-2\"\n//             >\n//               Full Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               id=\"fullName\"\n//               name=\"fullName\"\n//               value={formData.fullName}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//               required\n//             />\n//           </div>\n\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"email\" className=\"block text-lg font-medium mb-2\">\n//               Email\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//               required\n//               autoComplete=\"off\" // Prevents autofill\n//             />\n//           </div>\n\n//           <div className=\"mb-4\">\n//             <label\n//               htmlFor=\"password\"\n//               className=\"block text-lg font-medium mb-2\"\n//             >\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//               required\n//               autoComplete=\"new-password\" // Ensures new password input is not auto-filled\n//             />\n//           </div>\n\n//           <div className=\"mb-6\">\n//             <label htmlFor=\"role\" className=\"block text-lg font-medium mb-2\">\n//               Role\n//             </label>\n//             <select\n//               id=\"role\"\n//               name=\"role\"\n//               value={formData.role}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//             >\n//               <option value=\"User\">User</option>\n//               <option value=\"Admin\">Admin</option>\n//               <option value=\"Moderator\">Moderator</option>\n//             </select>\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             className=\"w-full p-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700\"\n//           >\n//             Register\n//           </button>\n//         </form>\n\n//         {message && (\n//           <div className=\"mt-4 text-center\">\n//             <p className=\"text-lg\">{message}</p>\n//           </div>\n//         )}\n\n//         <div className=\"mt-4 text-center\">\n//           <p>\n//             Already have an account?{\" \"}\n//             <a href=\"/login\" className=\"text-purple-400\">\n//               Login\n//             </a>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Registration;\n\nimport React, { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport bcrypt from \"bcryptjs\"; // Import bcryptjs for password hashing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\"); // Reset error message\n\n    try {\n      // Hash the password using bcrypt\n      const hashedPassword = await bcrypt.hash(formData.password, 10);\n\n      // Insert user data into Supabase (ensure the password is hashed)\n      const {\n        data,\n        error\n      } = await supabase.from(\"users\").insert([{\n        email: formData.email,\n        password: hashedPassword\n      }]);\n      if (error) throw error;\n      setSuccess(\"Registration successful! You can now log in.\");\n    } catch (error) {\n      setError(\"Error during registration: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-6 text-center\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-center\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"bg-purple-900 p-6 rounded-lg shadow-lg\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-lg font-medium mb-2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            className: \"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block text-lg font-medium mb-2\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            className: \"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full p-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"i0xPkZpk3U76Ei8j2GUstaHoBSI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","supabase","bcrypt","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","email","password","error","setError","success","setSuccess","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","hashedPassword","hash","data","from","insert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/home/saitejasangisapu/Desktop/new project/rbac/src/components/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { supabase } from \"../supabaseClient\";\n\n// function Registration() {\n//   const [formData, setFormData] = useState({\n//     fullName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     role: \"User\",\n//   });\n\n//   const [message, setMessage] = useState(\"\"); // To store success or error message\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prevData) => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(formData);\n\n//     try {\n//       // Insert form data into the 'users' table in Supabase\n//       const { data, error } = await supabase\n//         .from(\"users\") // Replace with your table name\n//         .insert([\n//           {\n//             full_name: formData.fullName,\n//             email: formData.email,\n//             password: formData.password,\n//             role: formData.role,\n//           },\n//         ]);\n\n//       if (error) {\n//         throw error;\n//       }\n\n//       console.log(\"Registration successful:\", data);\n//       setMessage(\"Registration Successful! Please login.\");\n//       setFormData({ fullName: \"\", email: \"\", password: \"\", role: \"User\" }); // Clear the form\n//     } catch (error) {\n//       console.error(\"Error registering user:\", error);\n//       setMessage(\"Error during registration. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-black text-white flex justify-center items-center\">\n//       <div className=\"w-full max-w-md\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center\">Register</h1>\n\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"bg-purple-900 p-6 rounded-lg shadow-lg\"\n//         >\n//           <div className=\"mb-4\">\n//             <label\n//               htmlFor=\"fullName\"\n//               className=\"block text-lg font-medium mb-2\"\n//             >\n//               Full Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               id=\"fullName\"\n//               name=\"fullName\"\n//               value={formData.fullName}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//               required\n//             />\n//           </div>\n\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"email\" className=\"block text-lg font-medium mb-2\">\n//               Email\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//               required\n//               autoComplete=\"off\" // Prevents autofill\n//             />\n//           </div>\n\n//           <div className=\"mb-4\">\n//             <label\n//               htmlFor=\"password\"\n//               className=\"block text-lg font-medium mb-2\"\n//             >\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//               required\n//               autoComplete=\"new-password\" // Ensures new password input is not auto-filled\n//             />\n//           </div>\n\n//           <div className=\"mb-6\">\n//             <label htmlFor=\"role\" className=\"block text-lg font-medium mb-2\">\n//               Role\n//             </label>\n//             <select\n//               id=\"role\"\n//               name=\"role\"\n//               value={formData.role}\n//               onChange={handleChange}\n//               className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n//             >\n//               <option value=\"User\">User</option>\n//               <option value=\"Admin\">Admin</option>\n//               <option value=\"Moderator\">Moderator</option>\n//             </select>\n//           </div>\n\n//           <button\n//             type=\"submit\"\n//             className=\"w-full p-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700\"\n//           >\n//             Register\n//           </button>\n//         </form>\n\n//         {message && (\n//           <div className=\"mt-4 text-center\">\n//             <p className=\"text-lg\">{message}</p>\n//           </div>\n//         )}\n\n//         <div className=\"mt-4 text-center\">\n//           <p>\n//             Already have an account?{\" \"}\n//             <a href=\"/login\" className=\"text-purple-400\">\n//               Login\n//             </a>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Registration;\n\n\nimport React, { useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport bcrypt from \"bcryptjs\"; // Import bcryptjs for password hashing\n\nfunction Register() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\"); // Reset error message\n\n    try {\n      // Hash the password using bcrypt\n      const hashedPassword = await bcrypt.hash(formData.password, 10);\n\n      // Insert user data into Supabase (ensure the password is hashed)\n      const { data, error } = await supabase\n        .from(\"users\")\n        .insert([\n          {\n            email: formData.email,\n            password: hashedPassword,\n          },\n        ]);\n\n      if (error) throw error;\n\n      setSuccess(\"Registration successful! You can now log in.\");\n    } catch (error) {\n      setError(\"Error during registration: \" + error.message);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white flex justify-center items-center\">\n      <div className=\"w-full max-w-md\">\n        <h1 className=\"text-4xl font-bold mb-6 text-center\">Register</h1>\n        {error && <p className=\"text-red-500 text-center\">{error}</p>}\n        {success && <p className=\"text-green-500 text-center\">{success}</p>}\n        <form onSubmit={handleSubmit} className=\"bg-purple-900 p-6 rounded-lg shadow-lg\" autoComplete=\"off\">\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-lg font-medium mb-2\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"password\" className=\"block text-lg font-medium mb-2\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"w-full p-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700\">Register</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}