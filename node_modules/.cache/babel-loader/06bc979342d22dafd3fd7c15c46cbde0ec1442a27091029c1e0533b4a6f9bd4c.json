{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";// Import useNavigate\nimport{supabase}from\"../supabaseClient\";import bcrypt from\"bcryptjs\";// Import bcryptjs\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[formData,setFormData]=useState({email:\"\",password:\"\",role:\"\"// Default empty role value\n});const[error,setError]=useState(\"\");// State for error messages\nconst[redirectMessage,setRedirectMessage]=useState(\"\");// State for redirect message\nconst navigate=useNavigate();// Initialize navigate function\nconst handleChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};const handleSubmit=async e=>{e.preventDefault();setError(\"\");// Reset error message\ntry{// Check if the email exists in the 'users' table\nconst{data,error:queryError}=await supabase.from(\"users\").select(\"*\").eq(\"email\",formData.email).eq(\"role\",formData.role)// Add the role validation here\n.single();// .single() fetches one row, returns null if no match\nif(queryError){throw queryError;// If there's an error with the query, handle it\n}if(data){// If user exists, verify the password by comparing hashed password\nconst isPasswordCorrect=await bcrypt.compare(formData.password,data.password);if(isPasswordCorrect){console.log(\"Login Successful\");setRedirectMessage(\"Redirecting to Home...\");setTimeout(()=>{// Pass the user id and role to the Home component via navigate state\nnavigate(\"/Home\",{state:{userId:data.id,role:formData.role}});},2000);// Redirect after 2 seconds\n}else{setError(\"Incorrect password\");}}else{setError(\"User or role not found. Please register first.\");}}catch(error){console.error(\"Error during login:\",error);setError(\"An error occurred during login.\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-black text-white flex justify-center items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-md\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-6 text-center\",children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-center mb-4\",children:error}),\" \",redirectMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"text-green-500 text-center mb-4\",children:redirectMessage}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"bg-purple-900 p-6 rounded-lg shadow-lg\",autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"block text-lg font-medium mb-2\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\"// Corrected name to match state key\n,value:formData.email,onChange:handleChange,className:\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\",required:true,autoComplete:\"new-email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block text-lg font-medium mb-2\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,className:\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\",required:true,autoComplete:\"new-password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"role\",className:\"block text-lg font-medium mb-2\",children:\"Role\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"role\",name:\"role\",value:formData.role,onChange:handleChange,className:\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Role\"}),/*#__PURE__*/_jsx(\"option\",{value:\"User\",children:\"User\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Admin\",children:\"Admin\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Moderator\",children:\"Moderator\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full p-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700\",children:\"Login\"})]})]})});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","supabase","bcrypt","jsx","_jsx","jsxs","_jsxs","Login","formData","setFormData","email","password","role","error","setError","redirectMessage","setRedirectMessage","navigate","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","data","queryError","from","select","eq","single","isPasswordCorrect","compare","console","log","setTimeout","state","userId","id","className","children","onSubmit","autoComplete","htmlFor","type","onChange","required"],"sources":["/home/saitejasangisapu/Desktop/Secure-Login-Backend/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { supabase } from \"../supabaseClient\";\nimport bcrypt from \"bcryptjs\"; // Import bcryptjs\n\nfunction Login() {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    role: \"\", // Default empty role value\n  });\n  const [error, setError] = useState(\"\"); // State for error messages\n  const [redirectMessage, setRedirectMessage] = useState(\"\"); // State for redirect message\n  const navigate = useNavigate(); // Initialize navigate function\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\"); // Reset error message\n\n    try {\n      // Check if the email exists in the 'users' table\n      const { data, error: queryError } = await supabase\n        .from(\"users\")\n        .select(\"*\")\n        .eq(\"email\", formData.email)\n        .eq(\"role\", formData.role) // Add the role validation here\n        .single(); // .single() fetches one row, returns null if no match\n\n      if (queryError) {\n        throw queryError; // If there's an error with the query, handle it\n      }\n\n      if (data) {\n        // If user exists, verify the password by comparing hashed password\n        const isPasswordCorrect = await bcrypt.compare(\n          formData.password,\n          data.password\n        );\n        if (isPasswordCorrect) {\n          console.log(\"Login Successful\");\n          setRedirectMessage(\"Redirecting to Home...\");\n          setTimeout(() => {\n            // Pass the user id and role to the Home component via navigate state\n            navigate(\"/Home\", {\n              state: { userId: data.id, role: formData.role },\n            });\n          }, 2000); // Redirect after 2 seconds\n        } else {\n          setError(\"Incorrect password\");\n        }\n      } else {\n        setError(\"User or role not found. Please register first.\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setError(\"An error occurred during login.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white flex justify-center items-center\">\n      <div className=\"w-full max-w-md\">\n        <h1 className=\"text-4xl font-bold mb-6 text-center\">Login</h1>\n        {error && <p className=\"text-red-500 text-center mb-4\">{error}</p>}{\" \"}\n        {/* Display error message */}\n        {redirectMessage && (\n          <p className=\"text-green-500 text-center mb-4\">{redirectMessage}</p>\n        )}{\" \"}\n        {/* Display redirect message */}\n        <form\n          onSubmit={handleSubmit}\n          className=\"bg-purple-900 p-6 rounded-lg shadow-lg\"\n          autoComplete=\"off\"\n        >\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-lg font-medium mb-2\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\" // Corrected name to match state key\n              value={formData.email}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n              required\n              autoComplete=\"new-email\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label\n              htmlFor=\"password\"\n              className=\"block text-lg font-medium mb-2\"\n            >\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n              required\n              autoComplete=\"new-password\"\n            />\n          </div>\n\n          {/* Role Dropdown */}\n          <div className=\"mb-4\">\n            <label htmlFor=\"role\" className=\"block text-lg font-medium mb-2\">\n              Role\n            </label>\n            <select\n              id=\"role\"\n              name=\"role\"\n              value={formData.role}\n              onChange={handleChange}\n              className=\"w-full p-3 rounded-lg bg-purple-800 text-white border border-purple-700\"\n            >\n              <option value=\"\">Select Role</option>\n              <option value=\"User\">User</option>\n              <option value=\"Admin\">Admin</option>\n              <option value=\"Moderator\">Moderator</option>\n            </select>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full p-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700\"\n          >\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}